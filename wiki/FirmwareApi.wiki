#summary API definition to interact with Bicycle LED POV by communicating using USB

Connecting Bicycle LED POV hardware to PC using a USB cable, a new virtual serial port will appear on PC. Commands are sent to the virtual serial port to interact with Bicycle LED POV hardware.

For each command sent, an answer with the value of the same command should be received - this works as a confirmation that command was received on Bicycle LED POV.

=General commands=
==Dummy command: command 1==
This command is useful for knowing that hardware is answering by sending the same byte that it received - 0x01.

Usage: send the value 1.

==Retrieve Bicycle LED POV firmware version: command 2==
This command returns the Bicycle LED POV firmware version.

Usage: send the value 2 and 3 bytes will be received: _byte_1_; _byte_2_; _byte_3_
  * _byte_1_: major version number;
  * _byte_2_: minor version number;
  * _byte_3_: revision version number.

Example: Version 1.0.2; byte_1 = 1, byte_2 = 0 and byte_3 = 2.

=SPI commands=
This commands permits the control of SS lines of devices attached on SPI bus: data latches ICs and DataFlash memory IC. This commands also permits to send/receive data to SPI bus.

==Enable SS0: command 3==
This command will put SS0 line at logic high value.

Usage: send value 3.

==Disable SS0: command 4==
This command will put SS0 line at logic low value.

Usage: send value 4.

==Enable SS1: command 5==
This command will put SS1 line at logic high value.

Usage: send value 5.

==Disable SS1: command 6==
This command will put SS0 line at logic low value.

Usage: send value 6.

==Enable SS2: command 7==
This command will put SS0 line at logic high value.

Usage: send value 7.

==Disable SS2: command 8==
This command will put SS2 line at logic low value.

Usage: send value 8.

==SPI master transmit: command 9==
This command will send a byte to SPI bus. Since the MCU AT90USB162 is acting as a master on SPI bus, at the end of transmission MCU will receive one byte from the slave, that byte is therefore sent to PC.

Usage: send value 9 and one byte will be received - the byte received is the one received from the slave. 

=Sensor hall effect commands=
This commands controls the Vcc line of the sensor and reads is data output.

==Sensor hall effect - enable Vcc: command 10==
This command enable the Vcc of the sensor.

Usage: send value 10.

==Sensor hall effect - disable Vcc: command 11==
This command disable the Vcc of the sensor.

Usage: send value 11.

==Sensor hall effect - read data: command 12==
This command will read the data line of the sensor, will return one byte with value 1 if data line is at high logic level value and 0 if data line is at low logic level value.

Usage: send value 12 and 1 byte will be received.

=DataFlash memory commands=
This commands controls the Vcc and hold lines of the DataFlash memory.

==DataFlash memory - enable Vcc: command 13==
This command enable the Vcc of the DataFlash memory.

Usage: send value 13.

==DataFlash memory - disable Vcc: command 14==
This command disable the Vcc of the DataFlash memory.

Usage: send value 14.

==DataFlash memory - enable hold: command 15==
This command enable the Vcc of the DataFlash memory.

Usage: send value 15.

==DataFlash memory - disable hold: command 16==
This command disable the Vcc of the DataFlash memory.

Usage: send value 16.

=Auto identification=
The hardware sends periodically on each 300ms the value 0xFE to the serial port. PC Software can look for this 0xFE value to identify a working Bicycle LED POV hardware on the serial port.

If a command is received the Auto identification process is aborted within next 5 seconds.